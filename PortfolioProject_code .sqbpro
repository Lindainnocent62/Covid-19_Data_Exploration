<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/linda/Downloads/projects2023/Sql file/PorfolioProject_2_DataCleaning.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="505"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="0,0:"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CovidVaccinations" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="59"/><column index="3" value="74"/><column index="4" value="73"/><column index="5" value="65"/><column index="6" value="66"/><column index="7" value="151"/><column index="8" value="150"/><column index="9" value="128"/><column index="10" value="213"/><column index="11" value="80"/><column index="12" value="93"/><column index="13" value="98"/><column index="14" value="108"/><column index="15" value="112"/><column index="16" value="142"/><column index="17" value="107"/><column index="18" value="170"/><column index="19" value="188"/><column index="20" value="192"/><column index="21" value="222"/><column index="22" value="240"/><column index="23" value="102"/><column index="24" value="113"/><column index="25" value="77"/><column index="26" value="92"/><column index="27" value="92"/><column index="28" value="95"/><column index="29" value="103"/><column index="30" value="136"/><column index="31" value="124"/><column index="32" value="101"/><column index="33" value="90"/><column index="34" value="135"/><column index="35" value="170"/><column index="36" value="94"/><column index="37" value="163"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats><column index="1" value=""/></display_formats><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">--we query to see if we have the right data
SELECT *
FROM CovidVaccinations
ORDER BY 2,3

SELECT *
FROM CovidDeaths
ORDER BY 2,3

--selecting data the we are going to be using 
SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
ORDER BY 1,2

--Looking at Total case vs Total deaths
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeatPercantage
FROM CovidDeaths
WHERE location LIKE '%South%'
ORDER BY 2,3

--Total cases vs population
--shows what percentage of the population has covid
SELECT location, date, total_cases, population, (total_cases/population)*100 AS DeatPercantage
FROM CovidDeaths
WHERE location LIKE '%South%'
ORDER BY 2,3

--what countries have the highest infection rate compared to population

SELECT location, population,MAX(total_cases) AS HighestInfectionCount, MAX((total_cases/population)*100) AS PopulationInfectedPercantage
FROM CovidDeaths
WHERE location LIKE '%South%'
GROUP BY location,population
ORDER BY PopulationInfectedPercantage DESC

--countries with the highest death count per population 
--we cast the max total death since it is of other data type
SELECT location, MAX(cast(total_deaths AS INT)) AS TotalDeathCount
FROM CovidDeaths
GROUP BY location
ORDER BY TotalDeathCount DESC
--from the query above is one look at the table they will quickly notice that instead of displaying countries we 
--they also see continents so as part of our data exploration we will clean so it display only countries
SELECT continent, MAX(cast(total_deaths AS INT)) AS TotalDeathCount
FROM CovidDeaths
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY TotalDeathCount DESC

--global numbers
SELECT date, SUM(new_cases) AS TotalCase,SUM(cast(total_deaths AS INT)) AS TotalDeaths, (SUM(cast(new_deaths AS INT))/SUM(cast(new_cases AS INT)))*100 AS DeatPercantage
FROM CovidDeaths
WHERE continent IS NOT NULL
GROUP BY DATE
ORDER BY 1,2

--join the two tables on location and date since thats more specific
--looking at Total Population vs Vaccination 
SELECT C_dea.continent, C_dea.location, C_dea.date,C_dea.population,C_vacc.new_vaccinations,
SUM(cast(C_vacc.new_vaccinations AS INT)) OVER (PARTITION BY C_dea.location) AS RollingCount
FROM CovidDeaths AS C_dea
JOIN CovidVaccinations AS C_vacc
  ON C_dea.location = C_vacc.location
  AND C_dea.date =C_vacc.date

 --USE CTE
WITH Pop_vs_Vacc (Continent, Location, Date, Population, New_Vaccination, RollingCount)
 AS
 (
 SELECT C_dea.continent, C_dea.location, C_dea.date, C_dea.population, C_vacc.new_vaccinations 
,SUM(cast(C_vacc.new_vaccinations AS INT)) OVER (PARTITION BY C_dea.location) AS RollingCounts
FROM CovidDeaths AS C_dea
JOIN CovidVaccinations AS C_vacc
  ON C_dea.location = C_vacc.location
  AND C_dea.date =C_vacc.date
WHERE C_dea.continent IS NOT NULL
)
SELECT *, (RollingCounts/population)*100 
FROM Pop_vs_Vacc

--TEMP TABLE

DROP TABLE IF EXISTS PercPopVaccinated;
CREATE TEMP TABLE PercPopVaccinated(
Continent varchar(100),
Location varchar(100),
Date datetime,
Population NUMERIC,
New_Vacc NUMERIC,
RollingC NUMERIC
)

INSERT INTO PercPopVaccinated 
SELECT C_dea.continent, C_dea.location, C_dea.date, C_dea.population, C_vacc.new_vaccinations 
,SUM(cast(C_vacc.new_vaccinations AS INT)) OVER (PARTITION BY C_dea.location) AS RollingCounts
FROM CovidDeaths AS C_dea
JOIN CovidVaccinations AS C_vacc
  ON C_dea.location = C_vacc.location
  AND C_dea.date =C_vacc.date
WHERE C_dea.continent IS NOT NULL

SELECT *, (RollingC/population)*100 AS Rpercentage
FROM PercPopVaccinated

--creating a view to store data for Tableau visualization
CREATE VIEW Pop_vs_Vacc AS
SELECT C_dea.continent, C_dea.location, C_dea.date, C_dea.population, C_vacc.new_vaccinations 
,SUM(cast(C_vacc.new_vaccinations AS INT)) OVER (PARTITION BY C_dea.location) AS RollingCounts
FROM CovidDeaths AS C_dea
JOIN CovidVaccinations AS C_vacc
  ON C_dea.location = C_vacc.location
  AND C_dea.date =C_vacc.date
WHERE C_dea.continent IS NOT NULL

</sql><sql name="SQL 1 (1)">--we query to see if we have the right data
SELECT *
FROM CovidVaccinations
ORDER BY 2,3

SELECT *
FROM CovidDeaths
ORDER BY 2,3

--selecting data the we are going to be using 
SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
ORDER BY 1,2

--Looking at Total case vs Total deaths
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeatPercantage
FROM CovidDeaths
WHERE location LIKE '%South%'
ORDER BY 2,3

--Total cases vs population
--shows what percentage of the population has covid
SELECT location, date, total_cases, population, (total_cases/population)*100 AS DeatPercantage
FROM CovidDeaths
WHERE location LIKE '%South%'
ORDER BY 2,3

--what countries have the highest infection rate compared to population

SELECT location, population,MAX(total_cases) AS HighestInfectionCount, MAX((total_cases/population)*100) AS PopulationInfectedPercantage
FROM CovidDeaths
WHERE location LIKE '%South%'
GROUP BY location,population
ORDER BY PopulationInfectedPercantage DESC

--countries with the highest death count per population 
--we cast the max total death since it is of other data type
SELECT location, MAX(cast(total_deaths AS INT)) AS TotalDeathCount
FROM CovidDeaths
GROUP BY location
ORDER BY TotalDeathCount DESC
--from the query above is one look at the table they will quickly notice that instead of displaying countries we 
--they also see continents so as part of our data exploration we will clean so it display only countries
SELECT continent, MAX(cast(total_deaths AS INT)) AS TotalDeathCount
FROM CovidDeaths
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY TotalDeathCount DESC

--global numbers
SELECT date, SUM(new_cases) AS TotalCase,SUM(cast(total_deaths AS INT)) AS TotalDeaths, (SUM(cast(new_deaths AS INT))/SUM(cast(new_cases AS INT)))*100 AS DeatPercantage
FROM CovidDeaths
WHERE continent IS NOT NULL
GROUP BY DATE
ORDER BY 1,2

--join the two tables on location and date since thats more specific
--looking at Total Population vs Vaccination 
SELECT C_dea.continent, C_dea.location, C_dea.date,C_dea.population,C_vacc.new_vaccinations,
SUM(cast(C_vacc.new_vaccinations AS INT)) OVER (PARTITION BY C_dea.location) AS RollingCount
FROM CovidDeaths AS C_dea
JOIN CovidVaccinations AS C_vacc
  ON C_dea.location = C_vacc.location
  AND C_dea.date =C_vacc.date

 --USE CTE
WITH Pop_vs_Vacc (Continent, Location, Date, Population, New_Vaccination, RollingCount)
 AS
 (
 SELECT C_dea.continent, C_dea.location, C_dea.date, C_dea.population, C_vacc.new_vaccinations 
,SUM(cast(C_vacc.new_vaccinations AS INT)) OVER (PARTITION BY C_dea.location) AS RollingCounts
FROM CovidDeaths AS C_dea
JOIN CovidVaccinations AS C_vacc
  ON C_dea.location = C_vacc.location
  AND C_dea.date =C_vacc.date
WHERE C_dea.continent IS NOT NULL
)
SELECT *, (RollingCounts/population)*100 
FROM Pop_vs_Vacc

--TEMP TABLE

DROP TABLE IF EXISTS PercPopVaccinated;
CREATE TEMP TABLE PercPopVaccinated(
Continent varchar(100),
Location varchar(100),
Date datetime,
Population NUMERIC,
New_Vacc NUMERIC,
RollingC NUMERIC
)

INSERT INTO PercPopVaccinated 
SELECT C_dea.continent, C_dea.location, C_dea.date, C_dea.population, C_vacc.new_vaccinations 
,SUM(cast(C_vacc.new_vaccinations AS INT)) OVER (PARTITION BY C_dea.location) AS RollingCounts
FROM CovidDeaths AS C_dea
JOIN CovidVaccinations AS C_vacc
  ON C_dea.location = C_vacc.location
  AND C_dea.date =C_vacc.date
WHERE C_dea.continent IS NOT NULL

SELECT *, (RollingC/population)*100 AS Rpercentage
FROM PercPopVaccinated

--creating a view to store data for Tableau visualization
CREATE VIEW Pop_vs_Vacc AS
SELECT C_dea.continent, C_dea.location, C_dea.date, C_dea.population, C_vacc.new_vaccinations 
,SUM(cast(C_vacc.new_vaccinations AS INT)) OVER (PARTITION BY C_dea.location) AS RollingCounts
FROM CovidDeaths AS C_dea
JOIN CovidVaccinations AS C_vacc
  ON C_dea.location = C_vacc.location
  AND C_dea.date =C_vacc.date
WHERE C_dea.continent IS NOT NULL

</sql><current_tab id="0"/></tab_sql></sqlb_project>
